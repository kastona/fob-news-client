import React from 'react';
import { Editor } from '@tiptap/core';
import { Editor as ExtendedEditor } from './Editor';
export interface ReactRendererOptions {
    editor: Editor;
    props?: Record<string, any>;
    as?: string;
    className?: string;
}
declare type ComponentType<R> = React.ComponentClass | React.FunctionComponent | React.ForwardRefExoticComponent<{
    items: any[];
    command: any;
} & React.RefAttributes<R>>;
export declare class ReactRenderer<R = unknown> {
    id: string;
    editor: ExtendedEditor;
    component: any;
    element: Element;
    props: Record<string, any>;
    reactElement: React.ReactNode;
    ref: R | null;
    constructor(component: ComponentType<R>, { editor, props, as, className, }: ReactRendererOptions);
    render(): void;
    updateProps(props?: Record<string, any>): void;
    destroy(): void;
}
export {};
